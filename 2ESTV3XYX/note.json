{
  "paragraphs": [
    {
      "text": "val a \u003d Array(1002, 3001, 4002, 2003, 2002, 3004, 1003, 4006)\r\n\r\nval b \u003d spark\r\n  .createDataset(a)\r\n  .withColumn(\"x\", col(\"value\") % 1000)",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 21:31:15.879",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "a: Array[Int] \u003d Array(1002, 3001, 4002, 2003, 2002, 3004, 1003, 4006)\r\nb: org.apache.spark.sql.DataFrame \u003d [value: int, x: int]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571157510356_1262904307",
      "id": "20191015-183830_105179184",
      "dateCreated": "2019-10-15 18:38:30.356",
      "dateStarted": "2019-12-21 21:31:15.947",
      "dateFinished": "2019-12-21 21:31:29.514",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "b.show",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 21:31:33.498",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-----+---+\n|value|  x|\n+-----+---+\n| 1002|  2|\n| 3001|  1|\n| 4002|  2|\n| 2003|  3|\n| 2002|  2|\n| 3004|  4|\n| 1003|  3|\n| 4006|  6|\n+-----+---+\n\r\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571158566434_990743294",
      "id": "20191015-185606_1707534165",
      "dateCreated": "2019-10-15 18:56:06.434",
      "dateStarted": "2019-12-21 21:31:33.518",
      "dateFinished": "2019-12-21 21:31:33.918",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val rawData \u003d Seq(\r\n  (1, 1000, \"Apple\", 0.76),\r\n  (2, 1000, \"Apple\", 0.11),\r\n  (1, 2000, \"Orange\", 0.98),\r\n  (1, 3000, \"Banana\", 0.24),\r\n  (2, 3000, \"Banana\", 0.99)\r\n)\r\n\r\nval dfA \u003d spark.createDataFrame(rawData).toDF(\"UserKey\", \"ItemKey\", \"ItemName\", \"Score\")\r\n\r\ndfA.show()",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 22:10:33.778",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-------+--------+-----+\n|UserKey|ItemKey|ItemName|Score|\n+-------+-------+--------+-----+\n|      1|   1000|   Apple| 0.76|\n|      2|   1000|   Apple| 0.11|\n|      1|   2000|  Orange| 0.98|\n|      1|   3000|  Banana| 0.24|\n|      2|   3000|  Banana| 0.99|\n+-------+-------+--------+-----+\n\r\nrawData: Seq[(Int, Int, String, Double)] \u003d List((1,1000,Apple,0.76), (2,1000,Apple,0.11), (1,2000,Orange,0.98), (1,3000,Banana,0.24), (2,3000,Banana,0.99))\r\ndfA: org.apache.spark.sql.DataFrame \u003d [UserKey: int, ItemKey: int ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571158572459_907312285",
      "id": "20191015-185612_410720374",
      "dateCreated": "2019-10-15 18:56:12.459",
      "dateStarted": "2019-12-21 22:10:15.638",
      "dateFinished": "2019-12-21 22:10:15.930",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val rawData \u003d Seq(\r\n  (1, 1000, \"Apple\", 0.76),\r\n  (2, 1000, \"Apple\", 0.11),\r\n  (1, 2000, \"Orange\", 0.98),\r\n  (1, 3000, \"Banana\", 0.24),\r\n  (2, 3000, \"Banana\", 0.99)\r\n)\r\n\r\nval dfA \u003d spark.createDataFrame(rawData).withColumnRenamed(\"_1\", \"UserKey\")\r\n                                        .withColumnRenamed(\"_2\", \"ItemKey\")\r\n                                        .withColumnRenamed(\"_3\", \"ItemName\")\r\n                                        .withColumnRenamed(\"_4\", \"Score\")\r\n                                        \r\n\r\ndfA.show()",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 22:15:45.752",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-------+--------+-----+\n|UserKey|ItemKey|ItemName|Score|\n+-------+-------+--------+-----+\n|      1|   1000|   Apple| 0.76|\n|      2|   1000|   Apple| 0.11|\n|      1|   2000|  Orange| 0.98|\n|      1|   3000|  Banana| 0.24|\n|      2|   3000|  Banana| 0.99|\n+-------+-------+--------+-----+\n\r\nrawData: Seq[(Int, Int, String, Double)] \u003d List((1,1000,Apple,0.76), (2,1000,Apple,0.11), (1,2000,Orange,0.98), (1,3000,Banana,0.24), (2,3000,Banana,0.99))\r\ndfA: org.apache.spark.sql.DataFrame \u003d [UserKey: int, ItemKey: int ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1576961660756_-19584283",
      "id": "20191221-215420_2100670789",
      "dateCreated": "2019-12-21 21:54:20.756",
      "dateStarted": "2019-12-21 22:15:45.767",
      "dateFinished": "2019-12-21 22:15:46.031",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "dfA.groupByKey(\"UserKey\").agg(collect_list(\"ItemKey\", \"ItemName\", \"Score\"))",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 22:21:41.041",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:27: error: type mismatch;\r\n found   : String(\"UserKey\")\r\n required: org.apache.spark.sql.Row \u003d\u003e ?\r\n       dfA.groupByKey(\"UserKey\").agg(collect_list(\"ItemKey\", \"ItemName\", \"Score\"))\r\n                      ^\n\u003cconsole\u003e:27: error: overloaded method value collect_list with alternatives:\r\n  (columnName: String)org.apache.spark.sql.Column \u003cand\u003e\r\n  (e: org.apache.spark.sql.Column)org.apache.spark.sql.Column\r\n cannot be applied to (String, String, String)\r\n       dfA.groupByKey(\"UserKey\").agg(collect_list(\"ItemKey\", \"ItemName\", \"Score\"))\r\n                                     ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1576961847905_-785866934",
      "id": "20191221-215727_342094723",
      "dateCreated": "2019-12-21 21:57:27.905",
      "dateStarted": "2019-12-21 22:21:41.055",
      "dateFinished": "2019-12-21 22:21:41.092",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "dfA.groupBy(\"UserKey\")\r\n  .agg(sort_array(collect_list(struct(\"Score\", \"ItemKey\", \"ItemName\"))))\r\n  .toDF(\"UserKey\", \"Collection\")\r\n  .show(20, false)",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 22:33:48.456",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----------------------------------------------------------+\n|UserKey|Collection                                                 |\n+-------+-----------------------------------------------------------+\n|1      |[[0.24,3000,Banana], [0.76,1000,Apple], [0.98,2000,Orange]]|\n|2      |[[0.11,1000,Apple], [0.99,3000,Banana]]                    |\n+-------+-----------------------------------------------------------+\n\r\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1576963013717_-1658138196",
      "id": "20191221-221653_1849203554",
      "dateCreated": "2019-12-21 22:16:53.717",
      "dateStarted": "2019-12-21 22:33:48.473",
      "dateFinished": "2019-12-21 22:33:51.281",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "dfA.groupBy(\"UserKey\")\r\n  .agg(sort_array(collect_list(struct(\"Score\", \"ItemKey\", \"ItemName\")), false))\r\n  .toDF(\"UserKey\", \"Collection\")\r\n  .show(20, false)",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 22:37:59.148",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----------------------------------------------------------+\n|UserKey|Collection                                                 |\n+-------+-----------------------------------------------------------+\n|1      |[[0.98,2000,Orange], [0.76,1000,Apple], [0.24,3000,Banana]]|\n|2      |[[0.99,3000,Banana], [0.11,1000,Apple]]                    |\n+-------+-----------------------------------------------------------+\n\r\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1576963413585_-745268830",
      "id": "20191221-222333_338098456",
      "dateCreated": "2019-12-21 22:23:33.585",
      "dateStarted": "2019-12-21 22:37:59.163",
      "dateFinished": "2019-12-21 22:37:59.758",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.SparkExecutorInfo\n\nval sei \u003d SparkExecutorInfo",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 22:26:53.158",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:26: error: object org.apache.spark.SparkExecutorInfo is not a value\r\n       val sei \u003d SparkExecutorInfo\r\n                 ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1576963024500_1954405437",
      "id": "20191221-221704_971468812",
      "dateCreated": "2019-12-21 22:17:04.500",
      "dateStarted": "2019-12-21 22:26:53.173",
      "dateFinished": "2019-12-21 22:26:53.194",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val a \u003d Seq((\"uno\", 1), (\"due\", 23), (\"tre\",10))\nval b \u003d Seq((\"uno\", \"anto\"),(\"tre\", \"giusepp\"),(\"due\", \"joe\"))\n\nval dfa \u003d spark.createDataFrame(sc.parallelize(a)).toDF(\"key\", \"age\")\nval dfb \u003d spark.createDataFrame(sc.parallelize(b)).toDF(\"key\", \"name\")\n\ndfa.join(broadcast(dfb), \"key\").show()",
      "user": "anonymous",
      "dateUpdated": "2019-12-21 23:51:40.492",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---+---+-------+\n|key|age|   name|\n+---+---+-------+\n|uno|  1|   anto|\n|due| 23|    joe|\n|tre| 10|giusepp|\n+---+---+-------+\n\r\na: Seq[(String, Int)] \u003d List((uno,1), (due,23), (tre,10))\r\nb: Seq[(String, String)] \u003d List((uno,anto), (tre,giusepp), (due,joe))\r\ndfa: org.apache.spark.sql.DataFrame \u003d [key: string, age: int]\r\ndfb: org.apache.spark.sql.DataFrame \u003d [key: string, name: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1576963564661_711092532",
      "id": "20191221-222604_35553882",
      "dateCreated": "2019-12-21 22:26:04.661",
      "dateStarted": "2019-12-21 23:51:49.277",
      "dateFinished": "2019-12-21 23:51:50.155",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val df \u003d tableA.join(broadcast(tableB), Seq(\"primary_key\"))\r\n",
      "user": "admin",
      "dateUpdated": "2019-12-21 23:17:16.193",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:23: error: not found: value tableA\r\n       val df \u003d tableA.join(broadcast(tableB), Seq(\"primary_key\"))\r\n                ^\n\u003cconsole\u003e:23: error: not found: value tableB\r\n       val df \u003d tableA.join(broadcast(tableB), Seq(\"primary_key\"))\r\n                                      ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1576965116605_807132044",
      "id": "20191221-225156_304889751",
      "dateCreated": "2019-12-21 22:51:56.606",
      "dateStarted": "2019-12-21 23:17:16.217",
      "dateFinished": "2019-12-21 23:17:16.285",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "admin",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1576966636193_-2055991917",
      "id": "20191221-231716_18910654",
      "dateCreated": "2019-12-21 23:17:16.193",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Exampl",
  "id": "2ESTV3XYX",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}